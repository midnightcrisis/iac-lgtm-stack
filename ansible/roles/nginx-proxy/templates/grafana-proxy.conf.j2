# Grafana Proxy Configuration
# Managed by Ansible - Do not edit manually

# Upstream Grafana backend
upstream grafana {
    server 127.0.0.1:{{ grafana_port }};
    keepalive 32;
}

# Rate limiting zone
limit_req_zone $binary_remote_addr zone=grafana_limit:10m rate=10r/s;

# HTTP server - redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name {{ grafana_domain }};

    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ grafana_domain }};

    # SSL configuration (will be managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/{{ grafana_domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ grafana_domain }}/privkey.pem;
    
    # SSL parameters
    include /etc/nginx/snippets/ssl-params.conf;

    # Logging
    access_log /var/log/nginx/grafana_access.log combined;
    error_log /var/log/nginx/grafana_error.log warn;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob: wss: https:;" always;

    # Rate limiting
    limit_req zone=grafana_limit burst=20 nodelay;

    # Client body size (for large dashboards)
    client_max_body_size {{ nginx_client_max_body_size }};

    # Proxy timeouts
    proxy_connect_timeout {{ nginx_proxy_connect_timeout }};
    proxy_send_timeout {{ nginx_proxy_send_timeout }};
    proxy_read_timeout {{ nginx_proxy_read_timeout }};

    # WebSocket support for Grafana Live
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Main Grafana proxy
    location / {
        proxy_pass http://grafana;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Buffering settings
        proxy_buffering off;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Cache headers for static assets
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://grafana;
            proxy_cache_valid 200 1d;
            proxy_cache_bypass $http_pragma $http_authorization;
            add_header Cache-Control "public, max-age=86400";
        }
    }

    # API specific location
    location /api/ {
        proxy_pass http://grafana;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable buffering for API calls
        proxy_buffering off;
        
        # Increase timeout for long-running queries
        proxy_read_timeout 300;
    }

    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass http://grafana/api/health;
        proxy_set_header Host $host;
    }
}
